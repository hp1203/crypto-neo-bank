// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FdCreated extends ethereum.Event {
  get params(): FdCreated__Params {
    return new FdCreated__Params(this);
  }
}

export class FdCreated__Params {
  _event: FdCreated;

  constructor(event: FdCreated) {
    this._event = event;
  }

  get fdId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get startDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get redeemedAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get cTokens(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get isActive(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }
}

export class FdRedeemd extends ethereum.Event {
  get params(): FdRedeemd__Params {
    return new FdRedeemd__Params(this);
  }
}

export class FdRedeemd__Params {
  _event: FdRedeemd;

  constructor(event: FdRedeemd) {
    this._event = event;
  }

  get fdId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get redeemedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RdCreated extends ethereum.Event {
  get params(): RdCreated__Params {
    return new RdCreated__Params(this);
  }
}

export class RdCreated__Params {
  _event: RdCreated;

  constructor(event: RdCreated) {
    this._event = event;
  }

  get rdId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get startDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get redeemedAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get frequency(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get cTokens(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get isActive(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class Investments extends ethereum.SmartContract {
  static bind(address: Address): Investments {
    return new Investments("Investments", address);
  }

  getFdBalance(fdId: BigInt): BigInt {
    let result = super.call("getFdBalance", "getFdBalance(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(fdId)
    ]);

    return result[0].toBigInt();
  }

  try_getFdBalance(fdId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFdBalance",
      "getFdBalance(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fdId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFdBalanceWithInterest(fdId: BigInt): BigInt {
    let result = super.call(
      "getFdBalanceWithInterest",
      "getFdBalanceWithInterest(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fdId)]
    );

    return result[0].toBigInt();
  }

  try_getFdBalanceWithInterest(fdId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFdBalanceWithInterest",
      "getFdBalanceWithInterest(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fdId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class MakeFdCall extends ethereum.Call {
  get inputs(): MakeFdCall__Inputs {
    return new MakeFdCall__Inputs(this);
  }

  get outputs(): MakeFdCall__Outputs {
    return new MakeFdCall__Outputs(this);
  }
}

export class MakeFdCall__Inputs {
  _call: MakeFdCall;

  constructor(call: MakeFdCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get duration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MakeFdCall__Outputs {
  _call: MakeFdCall;

  constructor(call: MakeFdCall) {
    this._call = call;
  }
}

export class RedeemFdCall extends ethereum.Call {
  get inputs(): RedeemFdCall__Inputs {
    return new RedeemFdCall__Inputs(this);
  }

  get outputs(): RedeemFdCall__Outputs {
    return new RedeemFdCall__Outputs(this);
  }
}

export class RedeemFdCall__Inputs {
  _call: RedeemFdCall;

  constructor(call: RedeemFdCall) {
    this._call = call;
  }

  get fdId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemFdCall__Outputs {
  _call: RedeemFdCall;

  constructor(call: RedeemFdCall) {
    this._call = call;
  }
}

export class RedeemMaturedFdsCall extends ethereum.Call {
  get inputs(): RedeemMaturedFdsCall__Inputs {
    return new RedeemMaturedFdsCall__Inputs(this);
  }

  get outputs(): RedeemMaturedFdsCall__Outputs {
    return new RedeemMaturedFdsCall__Outputs(this);
  }
}

export class RedeemMaturedFdsCall__Inputs {
  _call: RedeemMaturedFdsCall;

  constructor(call: RedeemMaturedFdsCall) {
    this._call = call;
  }
}

export class RedeemMaturedFdsCall__Outputs {
  _call: RedeemMaturedFdsCall;

  constructor(call: RedeemMaturedFdsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
