// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PaymentLinkCreated extends ethereum.Event {
  get params(): PaymentLinkCreated__Params {
    return new PaymentLinkCreated__Params(this);
  }
}

export class PaymentLinkCreated__Params {
  _event: PaymentLinkCreated;

  constructor(event: PaymentLinkCreated) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paymentLinkId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _url(): string {
    return this._event.parameters[2].value.toString();
  }

  get _type(): string {
    return this._event.parameters[3].value.toString();
  }

  get receiver(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get account(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get metadata(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class PaymentMade extends ethereum.Event {
  get params(): PaymentMade__Params {
    return new PaymentMade__Params(this);
  }
}

export class PaymentMade__Params {
  _event: PaymentMade;

  constructor(event: PaymentMade) {
    this._event = event;
  }

  get paymentId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get mode(): string {
    return this._event.parameters[1].value.toString();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get account(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class Payments__getPaymentLinkResultValue0Struct extends ethereum.Tuple {
  get paymentLinkId(): BigInt {
    return this[0].toBigInt();
  }

  get _url(): string {
    return this[1].toString();
  }

  get _type(): string {
    return this[2].toString();
  }

  get receiver(): Address {
    return this[3].toAddress();
  }

  get account(): BigInt {
    return this[4].toBigInt();
  }

  get metadata(): string {
    return this[5].toString();
  }
}

export class Payments extends ethereum.SmartContract {
  static bind(address: Address): Payments {
    return new Payments("Payments", address);
  }

  calculateFee(amount: BigInt): BigInt {
    let result = super.call("calculateFee", "calculateFee(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBigInt();
  }

  try_calculateFee(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateFee",
      "calculateFee(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPaymentLink(
    paymentLink: BigInt
  ): Payments__getPaymentLinkResultValue0Struct {
    let result = super.call(
      "getPaymentLink",
      "getPaymentLink(uint256):((uint256,string,string,address,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(paymentLink)]
    );

    return changetype<Payments__getPaymentLinkResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getPaymentLink(
    paymentLink: BigInt
  ): ethereum.CallResult<Payments__getPaymentLinkResultValue0Struct> {
    let result = super.tryCall(
      "getPaymentLink",
      "getPaymentLink(uint256):((uint256,string,string,address,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(paymentLink)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Payments__getPaymentLinkResultValue0Struct>(value[0].toTuple())
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _neobank(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreatePaymentLinkCall extends ethereum.Call {
  get inputs(): CreatePaymentLinkCall__Inputs {
    return new CreatePaymentLinkCall__Inputs(this);
  }

  get outputs(): CreatePaymentLinkCall__Outputs {
    return new CreatePaymentLinkCall__Outputs(this);
  }
}

export class CreatePaymentLinkCall__Inputs {
  _call: CreatePaymentLinkCall;

  constructor(call: CreatePaymentLinkCall) {
    this._call = call;
  }

  get url(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _type(): string {
    return this._call.inputValues[1].value.toString();
  }

  get receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get account(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get metadata(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class CreatePaymentLinkCall__Outputs {
  _call: CreatePaymentLinkCall;

  constructor(call: CreatePaymentLinkCall) {
    this._call = call;
  }
}

export class MakeERC20PaymentCall extends ethereum.Call {
  get inputs(): MakeERC20PaymentCall__Inputs {
    return new MakeERC20PaymentCall__Inputs(this);
  }

  get outputs(): MakeERC20PaymentCall__Outputs {
    return new MakeERC20PaymentCall__Outputs(this);
  }
}

export class MakeERC20PaymentCall__Inputs {
  _call: MakeERC20PaymentCall;

  constructor(call: MakeERC20PaymentCall) {
    this._call = call;
  }

  get paymentLinkId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get currency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MakeERC20PaymentCall__Outputs {
  _call: MakeERC20PaymentCall;

  constructor(call: MakeERC20PaymentCall) {
    this._call = call;
  }
}

export class MakeEthPaymentCall extends ethereum.Call {
  get inputs(): MakeEthPaymentCall__Inputs {
    return new MakeEthPaymentCall__Inputs(this);
  }

  get outputs(): MakeEthPaymentCall__Outputs {
    return new MakeEthPaymentCall__Outputs(this);
  }
}

export class MakeEthPaymentCall__Inputs {
  _call: MakeEthPaymentCall;

  constructor(call: MakeEthPaymentCall) {
    this._call = call;
  }

  get paymentLinkId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MakeEthPaymentCall__Outputs {
  _call: MakeEthPaymentCall;

  constructor(call: MakeEthPaymentCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
